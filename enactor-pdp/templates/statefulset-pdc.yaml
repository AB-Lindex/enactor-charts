{{- $root := . }}
{{- $basepath := .Template.BasePath }}
{{- range $pos := .Values.pdc.instances }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pdc-{{ .id }}
  namespace: {{ $root.Release.Namespace }}
  labels:
    {{- include "common.selectorLabels" $root | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "pdc.selectorLabels" . | nindent 6 }}
  replicas: {{ $root.Values.replicas }}
  template:
    metadata:
      labels:
        {{- include "pdc.selectorLabels" . | nindent 8 }}
        {{- include "common.selectorLabels" $root | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $basepath "/configmap-pdc.yaml") $root | sha256sum }}
    spec:
      terminationGracePeriodSeconds: 15
      serviceAccountName: {{ include "pdc.serviceAccountName" $root }}
      {{- if $root.Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range $name := $root.Values.imagePullSecrets }}
        - name: {{ $name }}
      {{- end }}
      {{- end }}

      enableServiceLinks: false

      # securityContext:
      #     runAsUser: 1100
      #     runAsGroup: 1100
      #     fsGroup: 1100

#      hostAliases:
#        - ip: "127.0.0.1"
#          hostnames:
#            - "localhost"
#            - "{{ $root.Values.pdc.name }}"

      containers:
        - name: pdc
          image: {{ $root.Values.pdc.image.repository }}:{{ $root.Values.pdc.image.tag | default  "latest" }}
          imagePullPolicy: {{ $root.Values.pdc.image.pullPolicy  }}
          ports:
            - containerPort: 8080
              name: pdc-http
            - containerPort: 2099
              name: pdc-2099
            - containerPort: 7775
              name: pdc-7775
            - containerPort: 7776
              name: pdc-7776
            - containerPort: 7777
              name: pdc-7777
          env:
            {{- include "env.defaults" $root | nindent 12 }}
            {{- include "env.pdc" $root | nindent 12 }}
            - name: ENACTOR_PD_HOST_ID
              value: {{ .hostId | quote }}

          envFrom:
            - configMapRef:
                name: config-common
                
            - configMapRef:
                name: config-{{ $root.Values.pdc.name }}

          # readinessProbe:
          #   httpGet:
          #     path: /WebMaintenance/
          #     port: 39830

          volumeMounts:
            - name: pdc-db
              mountPath: /enactor/pdc/database
            # - name: enactor-config
            #   mountPath: /enactor/app/config/enactor.xml
            #   subPath: enactor.xml

      volumes:
      #   - name: keystore
      #     secret:
      #       secretName: {{ $root.Release.Name }}-keystore
        # - name: enactor-config
        #   configMap:
        #     name: {{ $root.Release.Name }}-enactor-config
      
  volumeClaimTemplates:
    - metadata:
        name: pdc-db
      spec:
        storageClassName: {{ $root.Values.pdc.persistence.storageClass }}
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ $root.Values.pdc.persistence.size }}
{{- end }}