# Default values for enactor-em.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: nginx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: https

network:
  ema:
    http: 39830
    https: 52240
  emp:
    http: 39832
    https: 52242
    jmx: 39847
    jmx1: 39848
    jmx2: 39849
    jmx3: 39850
    jmx4: 39851
    jmx5: 52257
  ems:
    http: 39833
    https: 52243

dns:
  domain: my.fqdn.address
  ema: ema
  ems: ems
  emp: emp

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

storage:
  size: "25Gi"
  storageClass: ""

# Thirdparty Configuration
mariadb:
  fullnameOverride: "em-db"
  deploy: true
  auth:
    database: "enactorem"
    username: "enactor"
    existingSecret: em-secrets
  primary:
    persistence:
      size: "25Gi"
      storageClass: ""
    configuration: |
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=*
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log

      slow_query_log=0
      slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
      long_query_time=10.0

      character-set-server  = utf8mb4
      collation-server      = utf8mb4_general_ci
      transaction_isolation = READ-COMMITTED
      lower_case_table_names = 1

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

global:    
  dependsOn:
    imagePullPolicy: IfNotPresent
    image: busybox
    tag: "1.31"
    command:
      - sh
      - -c
      - |-
        sleep $INTERVAL;
        echo -e "Checking for the availability of '$HOST' on port $PORT";
        while ! nc -z $HOST $PORT;
          do sleep $INTERVAL;
          printf "-";
        done;
        echo -e "  >> Service '$HOST' has started";
    resources:
      requests:
        cpu: '10m'
        memory: '20Mi'
      limits:
        cpu: '50m'
        memory: '200Mi'
    securityContext: {}
